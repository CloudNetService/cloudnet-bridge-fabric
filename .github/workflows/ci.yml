name: "CI"
on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: ci-${{ github.event.pull_request.number || github.ref }}

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.mc_version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        mc_version:
          - 1.21.6
    steps:
      - name: Resolve variables
        run: |
          MC_VERSION="${{ matrix.mc_version }}"
          echo "PROJECT_NAME=v${MC_VERSION//./_}" >> $GITHUB_ENV
          echo "OUTPUT_FILE_NAME=bridge_${MC_VERSION//./}.jar" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 24
          check-latest: true
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        env:
          GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX: ${{ matrix.mc_version }}/
        with:
          add-job-summary: always
          cache-cleanup: on-success
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Setup Loom cache
        uses: actions/cache@v4
        with:
          path: '.gradle/loom-cache'
          restore-keys: ${{ runner.os }}-${{ matrix.mc_version }}-gradle-loom-
          key: ${{ runner.os }}-${{ matrix.mc_version }}-gradle-loom-${{ hashFiles('gradle/libs.versions.toml', 'gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run build
        run: ./gradlew :${{ env.PROJECT_NAME }}:build --stacktrace

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudnet_version_bridge_${{ env.PROJECT_NAME }}
          path: ${{ env.PROJECT_NAME }}/build/libs/${{ env.OUTPUT_FILE_NAME }}
